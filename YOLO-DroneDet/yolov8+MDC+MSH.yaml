# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9

# YOLOv8.0n head
head:
  - [4, 1, nn.Upsample, [None, 2, 'nearest']]  #  10
  - [[-1, 2], 1, Concat, [1]]  #  11
  - [-1, 1, Conv, [128, 1, 1]]  #  12
  - [12, 1, Conv, [128, 3, 2]]  #  13
  - [6, 1, nn.Upsample, [None, 2, 'nearest']]  #  14
  - [[-1, 4, 13], 1, Concat, [1]]  #  15
  - [-1, 1, Conv, [256, 1, 1]]  #  16
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  #  17
  - [[-1, 2, 12], 1, Concat, [1]]  #  18
  - [-1, 1, Conv, [128, 1, 1]]  #  19
  - [19, 1, Conv, [128, 3, 2]]  #  20
  - [16, 1, Conv, [256, 3, 2]]  #  21

  - [9, 1, nn.Upsample, [None, 2, 'nearest']]  #  22
  - [[-1, 6, 21], 1, Concat, [1]]  #  23
  - [-1, 3, C2f, [512]]  #  24
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  #  25
  - [[-1, 4, 16, 20], 1, Concat, [1]]  #  26
  - [-1, 3, C2f, [256]]  #  27
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  #  28
  - [[-1, 2, 12, 19], 1, Concat, [1]]  #  29
  - [-1, 3, C2f, [128]]  #  30

  - [24, 1, Conv, [512, 3, 2]]  #  31
  - [[-1, 9], 1, Concat, [1]]  #  32
  - [-1, 1, Conv, [1024, 1, 1]]  #  33
  - [33, 1, nn.Upsample, [None, 2, 'nearest']]  #  34
  - [27, 1, Conv, [256, 3, 2]]  #  35
  - [[-1, 24, 34], 1, Concat, [1]]  #  36
  - [-1, 1, Conv, [512, 1, 1]]  #  37
  - [37, 1, Conv, [512, 3, 2]]  #  38
  - [[-1, 9, 33], 1, Concat, [1]]  #  39
  - [-1, 1, Conv, [1024, 1, 1]]  #  40
  - [40, 1, nn.Upsample, [None, 2, 'nearest']]  #  41
  - [37, 1, nn.Upsample, [None, 2, 'nearest']]  #  42

  - [30, 1, Conv, [128, 3, 2]]  #  43
  - [[-1, 27, 42], 1, Concat, [1]]  #  44
  - [-1, 3, C2f, [256]]  #  45
  - [-1, 1, Conv, [256, 3, 2]]  #  46
  - [[-1, 24, 37, 41], 1, Concat, [1]]  #  47
  - [-1, 3, C2f, [512]]  #  48
  - [-1, 1, Conv, [512, 3, 2]]  #  49
  - [[-1, 9, 33, 40], 1, Concat, [1]]  #  50
  - [-1, 3, C2f, [1024]]  #  51

  - [[30, 45, 48, 51], 1, Detect, [nc, 64]]  # Detect(P3, P4, P5)
